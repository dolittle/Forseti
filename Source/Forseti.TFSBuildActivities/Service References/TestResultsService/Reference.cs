//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Forseti.TFSBuildActivities.TestResultsService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", ConfigurationName="TestResultsService.TestResultsServiceSoap")]
    public interface TestResultsServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryDefau" +
            "ltStrips", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryDefaultStrips(int[] testCaseIds, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryAttac" +
            "hments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryAttachments(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultAttachments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryTestResultAttachments(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier identifier, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unAttachments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryTestRunAttachments(int testRunId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateDefa" +
            "ultStrips", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UpdateDefaultStrips(Forseti.TFSBuildActivities.TestResultsService.DefaultAfnStripBinding[] afnStripBindingList, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateBugF" +
            "ieldMapping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties CreateBugFieldMapping(Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping bugFieldMapping, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryBugFi" +
            "eldMapping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping QueryBugFieldMapping(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateBugF" +
            "ieldMapping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateBugFieldMapping(Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping bugFieldMapping, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteBuil" +
            "d", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteBuild(string projectName, string buildUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Configuration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestConfiguration CreateTestConfiguration(Forseti.TFSBuildActivities.TestResultsService.TestConfiguration testConfiguration, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Configuration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestConfiguration(int testConfigurationId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestC" +
            "onfigurationById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestConfiguration QueryTestConfigurationById(int testConfigurationId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestC" +
            "onfigurations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestConfiguration[] QueryTestConfigurations(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestC" +
            "onfigurationsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int QueryTestConfigurationsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Configuration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestConfiguration(Forseti.TFSBuildActivities.TestResultsService.TestConfiguration testConfiguration, string projectName, bool updateInUse, bool unchangedValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Variable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int CreateTestVariable(Forseti.TFSBuildActivities.TestResultsService.TestVariable variable, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Variable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int UpdateTestVariable(Forseti.TFSBuildActivities.TestResultsService.TestVariable variable, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Variable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestVariable(int variableId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestV" +
            "ariableById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestVariable QueryTestVariableById(int variableId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestV" +
            "ariables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestVariable[] QueryTestVariables(string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Settings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties CreateTestSettings(Forseti.TFSBuildActivities.TestResultsService.TestSettings settings, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Settings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestSettings(Forseti.TFSBuildActivities.TestResultsService.TestSettings settings, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Settings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestSettings(int settingsId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestS" +
            "ettingsById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestSettings QueryTestSettingsById(int settingsId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestS" +
            "ettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestSettings[] QueryTestSettings(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, bool omitSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestS" +
            "ettingsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int QueryTestSettingsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "ResolutionState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int CreateTestResolutionState(Forseti.TFSBuildActivities.TestResultsService.TestResolutionState resolutionState, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "ResolutionState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UpdateTestResolutionState(Forseti.TFSBuildActivities.TestResultsService.TestResolutionState state, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "ResolutionState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestResolutionState(int stateId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esolutionStateById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResolutionState[] QueryTestResolutionStateById(int testResolutionStateId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esolutionStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestResolutionState[] QueryTestResolutionStates(string teamProject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/RegisterCo" +
            "llectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] RegisterCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/Unregister" +
            "Collectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UnregisterCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateColl" +
            "ectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UpdateCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryColle" +
            "ctors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] QueryCollectors(System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FindCollec" +
            "tor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation FindCollector(System.Guid teamProjectCollectionCatalogResourceId, string typeUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/RegisterCo" +
            "ntrollers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void RegisterControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/Unregister" +
            "Controllers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UnregisterControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateCont" +
            "rollers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UpdateControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryContr" +
            "ollers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestController[] QueryControllers(System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryContr" +
            "ollersByGroupId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestController[] QueryControllersByGroupId(System.Guid teamProjectCollectionCatalogResourceId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FindContro" +
            "ller", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestController FindController(System.Guid teamProjectCollectionCatalogResourceId, string controllerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/RegisterEn" +
            "vironments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] RegisterEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/Unregister" +
            "Environments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void UnregisterEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateEnvi" +
            "ronments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] UpdateEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryEnvir" +
            "onments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] QueryEnvironments(string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FindEnviro" +
            "nment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestEnvironment FindEnvironment(string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid environmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryBuild" +
            "Coverage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.BuildCoverage[] QueryBuildCoverage(string projectName, string buildUri, int flags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unCoverage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRunCoverage[] QueryTestRunCoverage(string projectName, int testRunId, int flags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryImpac" +
            "tedPointsForPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.ImpactedPoint[] QueryImpactedPointsForPlan(string teamProjectName, int planId, string buildUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/BlockTestP" +
            "oints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.BlockedPointProperties[] BlockTestPoints(Forseti.TFSBuildActivities.TestResultsService.TestPoint[] points, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Plan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPlan CreateTestPlan(Forseti.TFSBuildActivities.TestResultsService.TestPlan testPlan, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] links);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Plan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestPlan(int testPlanId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FetchTestP" +
            "lans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPlan[] FetchTestPlans(out int[] deletedIds, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] idsToFetch, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FetchTestP" +
            "oints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPoint[] FetchTestPoints(out int[] deletedIds, string projectName, int planId, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] idsToFetch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QuerySuite" +
            "PointCounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.SuitePointCount[] QuerySuitePointCounts(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestC" +
            "ases", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int[] QueryTestCases(string queryText, bool inPlans, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestP" +
            "lans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.SkinnyPlan[] QueryTestPlans(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestP" +
            "lanLinks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] QueryTestPlanLinks(string projectName, int planId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestP" +
            "oints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPoint[] QueryTestPoints(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestP" +
            "ointStatistics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPointStatistic[] QueryTestPointStatistics(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestP" +
            "ointHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPoint[] QueryTestPointHistory(int testPointId, int planId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Plan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestPlan UpdateTestPlan(Forseti.TFSBuildActivities.TestResultsService.TestPlan testPlan, string projectName, Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] changedLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Points", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties[] UpdateTestPoints(Forseti.TFSBuildActivities.TestResultsService.TestPoint[] points, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/AddCasesTo" +
            "Suite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AddCasesToSuite(out int[] configurationIds, out string[] configurationNames, Forseti.TFSBuildActivities.TestResultsService.IdAndRev parent, Forseti.TFSBuildActivities.TestResultsService.TestCaseAndOwner[] testCases, int toIndex, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/AddSuiteTo" +
            "Suite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AddSuiteToSuite(out Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties newSuiteProperties, Forseti.TFSBuildActivities.TestResultsService.IdAndRev parent, Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite suite, string teamProjectName, int toIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CopyTestSu" +
            "iteEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int CopyTestSuiteEntries(string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev fromSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, Forseti.TFSBuildActivities.TestResultsService.IdAndRev toSuiteId, int toIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "SuiteEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties DeleteTestSuiteEntries(Forseti.TFSBuildActivities.TestResultsService.IdAndRev parentSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FetchTestS" +
            "uites", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] FetchTestSuites(out int[] deletedIds, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] suiteIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/MoveTestSu" +
            "iteEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties MoveTestSuiteEntries(out Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties newToProps, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev fromSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, Forseti.TFSBuildActivities.TestResultsService.IdAndRev toSuiteId, int toIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestS" +
            "uites", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] QueryTestSuites(out Forseti.TFSBuildActivities.TestResultsService.SuiteIdAndType[] excessIds, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestS" +
            "uitesByTestCaseId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] QueryTestSuitesByTestCaseId(out Forseti.TFSBuildActivities.TestResultsService.SuiteIdAndType[] excessIds, string teamProjectName, int testCaseId, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/Repopulate" +
            "TestSuite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void RepopulateTestSuite(string teamProjectName, int suiteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/SetSuiteEn" +
            "tryConfigurations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties SetSuiteEntryConfigurations(string projectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev suite, Forseti.TFSBuildActivities.TestResultsService.TestCaseAndOwner[] testCases, int[] configIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/AssignTest" +
            "Points", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void AssignTestPoints(string projectName, int suiteId, Forseti.TFSBuildActivities.TestResultsService.TestPointAssignment[] assignments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Suite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestSuite(Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite testSuite, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Results", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void CreateTestResults(Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] results, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateTest" +
            "Run", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun CreateTestRun(Forseti.TFSBuildActivities.TestResultsService.TestRun testRun, string teamProjectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/AbortTestR" +
            "un", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AbortTestRun(int testRunId, int revision, string projectName, int options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Run", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestRun(int testRunId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteTest" +
            "Runs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteTestRuns(int[] testRunIds, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryBuild" +
            "ConfigurationById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.BuildConfiguration QueryBuildConfigurationById(int buildConfigurationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestA" +
            "ctionResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestActionResult[] QueryTestActionResults(out Forseti.TFSBuildActivities.TestResultsService.TestResultParameter[] parameters, out Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] attachments, Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier identifier, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FindTestRe" +
            "sultInMultipleProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult FindTestResultInMultipleProjects(out string projectName, int testRunId, int testResultId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResults(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/FetchTestR" +
            "esults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] FetchTestResults(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] deletedIds, Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdAndRev[] idsToFetch, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultsByRun", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRun(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, int pageSize, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultsByPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByPoint(string projectName, int planId, int pointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultsByRunAndOwner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndOwner(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, System.Guid owner, int pageSize, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultsByRunAndState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndState(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, byte state, int pageSize, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "esultsByRunAndOutcome", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndOutcome(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, byte outcome, int pageSize, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "uns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRuns(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unsInMultipleProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsInMultipleProjects(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int QueryTestRunsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unsById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsById(string teamProjectName, int testRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unsByBuild", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsByBuild(string teamProjectName, string buildUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unsByOwner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsByOwner(string teamProjectName, System.Guid owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unByTmiRunId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRun QueryTestRunByTmiRunId(System.Guid tmiRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryTestR" +
            "unStatistics", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestRunStatistic[] QueryTestRunStatistics(string projectName, int testRunId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/ResetTestR" +
            "esults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] ResetTestResults(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Results", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.ResultUpdateResponse[] UpdateTestResults(Forseti.TFSBuildActivities.TestResultsService.ResultUpdateRequest[] requests, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/UpdateTest" +
            "Run", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestRun(out int[] attachmentIds, Forseti.TFSBuildActivities.TestResultsService.TestRun testRun, Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] attachments, Forseti.TFSBuildActivities.TestResultsService.TestResultAttachmentIdentity[] attachmentDeletes, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateLogE" +
            "ntriesForRun", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        int[] CreateLogEntriesForRun(int testRunId, Forseti.TFSBuildActivities.TestResultsService.TestMessageLogEntry[] logEntries, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryLogEn" +
            "triesForRun", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.TestMessageLogEntry[] QueryLogEntriesForRun(int testRunId, int testMessageLogId, string projectName);
        
        // CODEGEN: Parameter 'QueryAssociatedWorkItemsFromResultsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/QueryAssoc" +
            "iatedWorkItemsFromResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsResponse QueryAssociatedWorkItemsFromResults(Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/CreateAsso" +
            "ciatedWorkItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void CreateAssociatedWorkItems(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string[] workItemUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/DeleteAsso" +
            "ciatedWorkItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void DeleteAssociatedWorkItems(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string[] workItemUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01/SetTestGro" +
            "upPermissions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TestResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Coverage))]
        void SetTestGroupPermissions(string projectName);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestResultAttachment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string commentField;
        
        private int idField;
        
        private string fileNameField;
        
        private string attachmentTypeField;
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        private System.DateTime creationDateField;
        
        private long lengthField;
        
        private int iterationIdField;
        
        private string actionPathField;
        
        private bool isCompleteField;
        
        private System.Guid tmiRunIdField;
        
        public TestResultAttachment() {
            this.iterationIdField = 0;
            this.isCompleteField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("FileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AttachmentType {
            get {
                return this.attachmentTypeField;
            }
            set {
                this.attachmentTypeField = value;
                this.RaisePropertyChanged("AttachmentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
                this.RaisePropertyChanged("CreationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
                this.RaisePropertyChanged("Length");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int IterationId {
            get {
                return this.iterationIdField;
            }
            set {
                this.iterationIdField = value;
                this.RaisePropertyChanged("IterationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ActionPath {
            get {
                return this.actionPathField;
            }
            set {
                this.actionPathField = value;
                this.RaisePropertyChanged("ActionPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IsComplete {
            get {
                return this.isCompleteField;
            }
            set {
                this.isCompleteField = value;
                this.RaisePropertyChanged("IsComplete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid TmiRunId {
            get {
                return this.tmiRunIdField;
            }
            set {
                this.tmiRunIdField = value;
                this.RaisePropertyChanged("TmiRunId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestMessageLogEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int testMessageLogIdField;
        
        private int entryIdField;
        
        private System.Guid logUserField;
        
        private System.DateTime dateCreatedField;
        
        private byte logLevelField;
        
        private string messageField;
        
        public TestMessageLogEntry() {
            this.testMessageLogIdField = 0;
            this.entryIdField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestMessageLogId {
            get {
                return this.testMessageLogIdField;
            }
            set {
                this.testMessageLogIdField = value;
                this.RaisePropertyChanged("TestMessageLogId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int EntryId {
            get {
                return this.entryIdField;
            }
            set {
                this.entryIdField = value;
                this.RaisePropertyChanged("EntryId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LogUser {
            get {
                return this.logUserField;
            }
            set {
                this.logUserField = value;
                this.RaisePropertyChanged("LogUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("DateCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte LogLevel {
            get {
                return this.logLevelField;
            }
            set {
                this.logLevelField = value;
                this.RaisePropertyChanged("LogLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ResultUpdateResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int[] attachmentIdsField;
        
        private int revisionField;
        
        private System.DateTime lastUpdatedField;
        
        private System.Guid lastUpdatedByField;
        
        public ResultUpdateResponse() {
            this.lastUpdatedField = new System.DateTime(0);
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public int[] AttachmentIds {
            get {
                return this.attachmentIdsField;
            }
            set {
                this.attachmentIdsField = value;
                this.RaisePropertyChanged("AttachmentIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestResultAttachmentIdentity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        private int attachmentIdField;
        
        public TestResultAttachmentIdentity() {
            this.testRunIdField = 0;
            this.testResultIdField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AttachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
                this.RaisePropertyChanged("AttachmentId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ResultUpdateRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestCaseResult testCaseResultField;
        
        private TestActionResult[] actionResultsField;
        
        private TestActionResult[] actionResultDeletesField;
        
        private TestResultParameter[] parametersField;
        
        private TestResultParameter[] parameterDeletesField;
        
        private TestResultAttachment[] attachmentsField;
        
        private TestResultAttachmentIdentity[] attachmentDeletesField;
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TestCaseResult TestCaseResult {
            get {
                return this.testCaseResultField;
            }
            set {
                this.testCaseResultField = value;
                this.RaisePropertyChanged("TestCaseResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public TestActionResult[] ActionResults {
            get {
                return this.actionResultsField;
            }
            set {
                this.actionResultsField = value;
                this.RaisePropertyChanged("ActionResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public TestActionResult[] ActionResultDeletes {
            get {
                return this.actionResultDeletesField;
            }
            set {
                this.actionResultDeletesField = value;
                this.RaisePropertyChanged("ActionResultDeletes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public TestResultParameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
                this.RaisePropertyChanged("Parameters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public TestResultParameter[] ParameterDeletes {
            get {
                return this.parameterDeletesField;
            }
            set {
                this.parameterDeletesField = value;
                this.RaisePropertyChanged("ParameterDeletes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public TestResultAttachment[] Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
                this.RaisePropertyChanged("Attachments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public TestResultAttachmentIdentity[] AttachmentDeletes {
            get {
                return this.attachmentDeletesField;
            }
            set {
                this.attachmentDeletesField = value;
                this.RaisePropertyChanged("AttachmentDeletes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestCaseResult : TestResult {
        
        private int afnStripIdField;
        
        private int testCaseIdField;
        
        private int configurationIdField;
        
        private string configurationNameField;
        
        private int testPointIdField;
        
        private byte stateField;
        
        private byte failureTypeField;
        
        private int resolutionStateIdField;
        
        private string computerNameField;
        
        private System.Guid ownerField;
        
        private System.Guid runByField;
        
        private byte priorityField;
        
        private string testCaseTitleField;
        
        private string testCaseAreaField;
        
        private string testCaseAreaUriField;
        
        private int testCaseRevisionField;
        
        private int resetCountField;
        
        private string automatedTestNameField;
        
        private string automatedTestStorageField;
        
        private string automatedTestTypeField;
        
        private string automatedTestTypeIdField;
        
        private string automatedTestIdField;
        
        private int revisionField;
        
        public TestCaseResult() {
            this.testCaseIdField = 0;
            this.configurationIdField = 0;
            this.testPointIdField = 0;
            this.stateField = ((byte)(0));
            this.failureTypeField = ((byte)(0));
            this.resolutionStateIdField = 0;
            this.priorityField = ((byte)(255));
            this.testCaseRevisionField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int AfnStripId {
            get {
                return this.afnStripIdField;
            }
            set {
                this.afnStripIdField = value;
                this.RaisePropertyChanged("AfnStripId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
                this.RaisePropertyChanged("TestCaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ConfigurationId {
            get {
                return this.configurationIdField;
            }
            set {
                this.configurationIdField = value;
                this.RaisePropertyChanged("ConfigurationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ConfigurationName {
            get {
                return this.configurationNameField;
            }
            set {
                this.configurationNameField = value;
                this.RaisePropertyChanged("ConfigurationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestPointId {
            get {
                return this.testPointIdField;
            }
            set {
                this.testPointIdField = value;
                this.RaisePropertyChanged("TestPointId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte FailureType {
            get {
                return this.failureTypeField;
            }
            set {
                this.failureTypeField = value;
                this.RaisePropertyChanged("FailureType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int ResolutionStateId {
            get {
                return this.resolutionStateIdField;
            }
            set {
                this.resolutionStateIdField = value;
                this.RaisePropertyChanged("ResolutionStateId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
                this.RaisePropertyChanged("ComputerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("Owner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid RunBy {
            get {
                return this.runByField;
            }
            set {
                this.runByField = value;
                this.RaisePropertyChanged("RunBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "255")]
        public byte Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TestCaseTitle {
            get {
                return this.testCaseTitleField;
            }
            set {
                this.testCaseTitleField = value;
                this.RaisePropertyChanged("TestCaseTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TestCaseArea {
            get {
                return this.testCaseAreaField;
            }
            set {
                this.testCaseAreaField = value;
                this.RaisePropertyChanged("TestCaseArea");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TestCaseAreaUri {
            get {
                return this.testCaseAreaUriField;
            }
            set {
                this.testCaseAreaUriField = value;
                this.RaisePropertyChanged("TestCaseAreaUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestCaseRevision {
            get {
                return this.testCaseRevisionField;
            }
            set {
                this.testCaseRevisionField = value;
                this.RaisePropertyChanged("TestCaseRevision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResetCount {
            get {
                return this.resetCountField;
            }
            set {
                this.resetCountField = value;
                this.RaisePropertyChanged("ResetCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AutomatedTestName {
            get {
                return this.automatedTestNameField;
            }
            set {
                this.automatedTestNameField = value;
                this.RaisePropertyChanged("AutomatedTestName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AutomatedTestStorage {
            get {
                return this.automatedTestStorageField;
            }
            set {
                this.automatedTestStorageField = value;
                this.RaisePropertyChanged("AutomatedTestStorage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AutomatedTestType {
            get {
                return this.automatedTestTypeField;
            }
            set {
                this.automatedTestTypeField = value;
                this.RaisePropertyChanged("AutomatedTestType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AutomatedTestTypeId {
            get {
                return this.automatedTestTypeIdField;
            }
            set {
                this.automatedTestTypeIdField = value;
                this.RaisePropertyChanged("AutomatedTestTypeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AutomatedTestId {
            get {
                return this.automatedTestIdField;
            }
            set {
                this.automatedTestIdField = value;
                this.RaisePropertyChanged("AutomatedTestId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestActionResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestIterationResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestStepResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SharedStepResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestCaseResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public abstract partial class TestResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestCaseResultIdentifier idField;
        
        private string errorMessageField;
        
        private string commentField;
        
        private System.DateTime creationDateField;
        
        private byte outcomeField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private System.DateTime dateStartedField;
        
        private System.DateTime dateCompletedField;
        
        private long durationField;
        
        public TestResult() {
            this.creationDateField = new System.DateTime(0);
            this.outcomeField = ((byte)(0));
            this.lastUpdatedField = new System.DateTime(0);
            this.dateStartedField = new System.DateTime(0);
            this.dateCompletedField = new System.DateTime(0);
            this.durationField = ((long)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TestCaseResultIdentifier Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
                this.RaisePropertyChanged("CreationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
                this.RaisePropertyChanged("Outcome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime DateStarted {
            get {
                return this.dateStartedField;
            }
            set {
                this.dateStartedField = value;
                this.RaisePropertyChanged("DateStarted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime DateCompleted {
            get {
                return this.dateCompletedField;
            }
            set {
                this.dateCompletedField = value;
                this.RaisePropertyChanged("DateCompleted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(long), "0")]
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("Duration");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestCaseResultIdentifier : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestIterationResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestStepResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SharedStepResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestActionResult : TestResult {
        
        private string actionPathField;
        
        private int setIdField;
        
        private int iterationIdField;
        
        public TestActionResult() {
            this.setIdField = 0;
            this.iterationIdField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ActionPath {
            get {
                return this.actionPathField;
            }
            set {
                this.actionPathField = value;
                this.RaisePropertyChanged("ActionPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SetId {
            get {
                return this.setIdField;
            }
            set {
                this.setIdField = value;
                this.RaisePropertyChanged("SetId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int IterationId {
            get {
                return this.iterationIdField;
            }
            set {
                this.iterationIdField = value;
                this.RaisePropertyChanged("IterationId");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestIterationResult : TestActionResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestStepResult : TestActionResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class SharedStepResult : TestActionResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestResultParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] expectedField;
        
        private byte[] actualField;
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        private int iterationIdField;
        
        private string actionPathField;
        
        private string parameterNameField;
        
        private byte dataTypeField;
        
        public TestResultParameter() {
            this.iterationIdField = 0;
            this.dataTypeField = ((byte)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Expected {
            get {
                return this.expectedField;
            }
            set {
                this.expectedField = value;
                this.RaisePropertyChanged("Expected");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] Actual {
            get {
                return this.actualField;
            }
            set {
                this.actualField = value;
                this.RaisePropertyChanged("Actual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int IterationId {
            get {
                return this.iterationIdField;
            }
            set {
                this.iterationIdField = value;
                this.RaisePropertyChanged("IterationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ActionPath {
            get {
                return this.actionPathField;
            }
            set {
                this.actionPathField = value;
                this.RaisePropertyChanged("ActionPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
                this.RaisePropertyChanged("ParameterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
                this.RaisePropertyChanged("DataType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestRunStatistic : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestResolutionState resolutionStateField;
        
        private byte stateField;
        
        private byte outcomeField;
        
        private int countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TestResolutionState ResolutionState {
            get {
                return this.resolutionStateField;
            }
            set {
                this.resolutionStateField = value;
                this.RaisePropertyChanged("ResolutionState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
                this.RaisePropertyChanged("Outcome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestResolutionState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string teamProjectField;
        
        public TestResolutionState() {
            this.idField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TeamProject {
            get {
                return this.teamProjectField;
            }
            set {
                this.teamProjectField = value;
                this.RaisePropertyChanged("TeamProject");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestCaseResultIdAndRev : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestCaseResultIdentifier idField;
        
        private int revisionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TestCaseResultIdentifier Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestRun : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorMessageField;
        
        private int testRunIdField;
        
        private string titleField;
        
        private System.Guid ownerField;
        
        private byte stateField;
        
        private string buildUriField;
        
        private string dropLocationField;
        
        private string buildNumberField;
        
        private string buildPlatformField;
        
        private string buildFlavorField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdatedField;
        
        private System.DateTime startDateField;
        
        private System.DateTime completeDateField;
        
        private byte postProcessStateField;
        
        private System.DateTime dueDateField;
        
        private string iterationField;
        
        private string controllerField;
        
        private string teamProjectField;
        
        private int testPlanIdField;
        
        private int buildConfigurationIdField;
        
        private int testSettingsIdField;
        
        private int publicTestSettingsIdField;
        
        private System.Guid testEnvironmentIdField;
        
        private int revisionField;
        
        private int testMessageLogIdField;
        
        private string legacySharePathField;
        
        private System.Guid lastUpdatedByField;
        
        private byte typeField;
        
        private bool isAutomatedField;
        
        private int versionField;
        
        private bool isBvtField;
        
        private string commentField;
        
        public TestRun() {
            this.lastUpdatedField = new System.DateTime(0);
            this.testSettingsIdField = 0;
            this.publicTestSettingsIdField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("Owner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildUri {
            get {
                return this.buildUriField;
            }
            set {
                this.buildUriField = value;
                this.RaisePropertyChanged("BuildUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DropLocation {
            get {
                return this.dropLocationField;
            }
            set {
                this.dropLocationField = value;
                this.RaisePropertyChanged("DropLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildNumber {
            get {
                return this.buildNumberField;
            }
            set {
                this.buildNumberField = value;
                this.RaisePropertyChanged("BuildNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildPlatform {
            get {
                return this.buildPlatformField;
            }
            set {
                this.buildPlatformField = value;
                this.RaisePropertyChanged("BuildPlatform");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildFlavor {
            get {
                return this.buildFlavorField;
            }
            set {
                this.buildFlavorField = value;
                this.RaisePropertyChanged("BuildFlavor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
                this.RaisePropertyChanged("CreationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CompleteDate {
            get {
                return this.completeDateField;
            }
            set {
                this.completeDateField = value;
                this.RaisePropertyChanged("CompleteDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte PostProcessState {
            get {
                return this.postProcessStateField;
            }
            set {
                this.postProcessStateField = value;
                this.RaisePropertyChanged("PostProcessState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
                this.RaisePropertyChanged("DueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iteration {
            get {
                return this.iterationField;
            }
            set {
                this.iterationField = value;
                this.RaisePropertyChanged("Iteration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Controller {
            get {
                return this.controllerField;
            }
            set {
                this.controllerField = value;
                this.RaisePropertyChanged("Controller");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TeamProject {
            get {
                return this.teamProjectField;
            }
            set {
                this.teamProjectField = value;
                this.RaisePropertyChanged("TeamProject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestPlanId {
            get {
                return this.testPlanIdField;
            }
            set {
                this.testPlanIdField = value;
                this.RaisePropertyChanged("TestPlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BuildConfigurationId {
            get {
                return this.buildConfigurationIdField;
            }
            set {
                this.buildConfigurationIdField = value;
                this.RaisePropertyChanged("BuildConfigurationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestSettingsId {
            get {
                return this.testSettingsIdField;
            }
            set {
                this.testSettingsIdField = value;
                this.RaisePropertyChanged("TestSettingsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int PublicTestSettingsId {
            get {
                return this.publicTestSettingsIdField;
            }
            set {
                this.publicTestSettingsIdField = value;
                this.RaisePropertyChanged("PublicTestSettingsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid TestEnvironmentId {
            get {
                return this.testEnvironmentIdField;
            }
            set {
                this.testEnvironmentIdField = value;
                this.RaisePropertyChanged("TestEnvironmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestMessageLogId {
            get {
                return this.testMessageLogIdField;
            }
            set {
                this.testMessageLogIdField = value;
                this.RaisePropertyChanged("TestMessageLogId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LegacySharePath {
            get {
                return this.legacySharePathField;
            }
            set {
                this.legacySharePathField = value;
                this.RaisePropertyChanged("LegacySharePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsAutomated {
            get {
                return this.isAutomatedField;
            }
            set {
                this.isAutomatedField = value;
                this.RaisePropertyChanged("IsAutomated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsBvt {
            get {
                return this.isBvtField;
            }
            set {
                this.isBvtField = value;
                this.RaisePropertyChanged("IsBvt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class SuiteIdAndType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int suiteIdField;
        
        private byte suiteTypeField;
        
        public SuiteIdAndType() {
            this.suiteIdField = 0;
            this.suiteTypeField = ((byte)(2));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int SuiteId {
            get {
                return this.suiteIdField;
            }
            set {
                this.suiteIdField = value;
                this.RaisePropertyChanged("SuiteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "2")]
        public byte SuiteType {
            get {
                return this.suiteTypeField;
            }
            set {
                this.suiteTypeField = value;
                this.RaisePropertyChanged("SuiteType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestPointAssignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int testCaseIdField;
        
        private int configurationIdField;
        
        private string configurationNameField;
        
        private System.Guid assignedToField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
                this.RaisePropertyChanged("TestCaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ConfigurationId {
            get {
                return this.configurationIdField;
            }
            set {
                this.configurationIdField = value;
                this.RaisePropertyChanged("ConfigurationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ConfigurationName {
            get {
                return this.configurationNameField;
            }
            set {
                this.configurationNameField = value;
                this.RaisePropertyChanged("ConfigurationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
                this.RaisePropertyChanged("AssignedTo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestSuiteEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestPointAssignment[] pointAssignmentsField;
        
        private int entryIdField;
        
        private byte entryTypeField;
        
        public TestSuiteEntry() {
            this.entryTypeField = ((byte)(1));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public TestPointAssignment[] PointAssignments {
            get {
                return this.pointAssignmentsField;
            }
            set {
                this.pointAssignmentsField = value;
                this.RaisePropertyChanged("PointAssignments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int EntryId {
            get {
                return this.entryIdField;
            }
            set {
                this.entryIdField = value;
                this.RaisePropertyChanged("EntryId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "1")]
        public byte EntryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
                this.RaisePropertyChanged("EntryType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ServerTestSuite : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestSuiteEntry[] serverEntriesField;
        
        private int[] defaultConfigurationsField;
        
        private string[] defaultConfigurationNamesField;
        
        private int idField;
        
        private int planIdField;
        
        private int parentIdField;
        
        private string titleField;
        
        private string descriptionField;
        
        private string queryStringField;
        
        private int requirementIdField;
        
        private int revisionField;
        
        private byte suiteTypeField;
        
        private bool inheritDefaultConfigurationsField;
        
        private System.DateTime lastPopulatedField;
        
        private string lastErrorField;
        
        private byte stateField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        public ServerTestSuite() {
            this.lastUpdatedField = new System.DateTime(0);
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public TestSuiteEntry[] ServerEntries {
            get {
                return this.serverEntriesField;
            }
            set {
                this.serverEntriesField = value;
                this.RaisePropertyChanged("ServerEntries");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public int[] DefaultConfigurations {
            get {
                return this.defaultConfigurationsField;
            }
            set {
                this.defaultConfigurationsField = value;
                this.RaisePropertyChanged("DefaultConfigurations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] DefaultConfigurationNames {
            get {
                return this.defaultConfigurationNamesField;
            }
            set {
                this.defaultConfigurationNamesField = value;
                this.RaisePropertyChanged("DefaultConfigurationNames");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PlanId {
            get {
                return this.planIdField;
            }
            set {
                this.planIdField = value;
                this.RaisePropertyChanged("PlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
                this.RaisePropertyChanged("ParentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string QueryString {
            get {
                return this.queryStringField;
            }
            set {
                this.queryStringField = value;
                this.RaisePropertyChanged("QueryString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RequirementId {
            get {
                return this.requirementIdField;
            }
            set {
                this.requirementIdField = value;
                this.RaisePropertyChanged("RequirementId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte SuiteType {
            get {
                return this.suiteTypeField;
            }
            set {
                this.suiteTypeField = value;
                this.RaisePropertyChanged("SuiteType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool InheritDefaultConfigurations {
            get {
                return this.inheritDefaultConfigurationsField;
            }
            set {
                this.inheritDefaultConfigurationsField = value;
                this.RaisePropertyChanged("InheritDefaultConfigurations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime LastPopulated {
            get {
                return this.lastPopulatedField;
            }
            set {
                this.lastPopulatedField = value;
                this.RaisePropertyChanged("LastPopulated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastError {
            get {
                return this.lastErrorField;
            }
            set {
                this.lastErrorField = value;
                this.RaisePropertyChanged("LastError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestCaseAndOwner : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private System.Guid ownerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("Owner");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestPointStatistic : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte testPointStateField;
        
        private byte resultStateField;
        
        private byte resultOutcomeField;
        
        private byte failureTypeField;
        
        private int resolutionStateIdField;
        
        private int countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte TestPointState {
            get {
                return this.testPointStateField;
            }
            set {
                this.testPointStateField = value;
                this.RaisePropertyChanged("TestPointState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte ResultState {
            get {
                return this.resultStateField;
            }
            set {
                this.resultStateField = value;
                this.RaisePropertyChanged("ResultState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte ResultOutcome {
            get {
                return this.resultOutcomeField;
            }
            set {
                this.resultOutcomeField = value;
                this.RaisePropertyChanged("ResultOutcome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte FailureType {
            get {
                return this.failureTypeField;
            }
            set {
                this.failureTypeField = value;
                this.RaisePropertyChanged("FailureType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResolutionStateId {
            get {
                return this.resolutionStateIdField;
            }
            set {
                this.resolutionStateIdField = value;
                this.RaisePropertyChanged("ResolutionStateId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class SkinnyPlan : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class SuitePointCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int suiteIdField;
        
        private int pointCountField;
        
        public SuitePointCount() {
            this.pointCountField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SuiteId {
            get {
                return this.suiteIdField;
            }
            set {
                this.suiteIdField = value;
                this.RaisePropertyChanged("SuiteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int PointCount {
            get {
                return this.pointCountField;
            }
            set {
                this.pointCountField = value;
                this.RaisePropertyChanged("PointCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class IdAndRev : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int revisionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestExternalLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int linkIdField;
        
        private string uriField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LinkId {
            get {
                return this.linkIdField;
            }
            set {
                this.linkIdField = value;
                this.RaisePropertyChanged("LinkId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
                this.RaisePropertyChanged("Uri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestPlan : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private int planIdField;
        
        private string nameField;
        
        private System.Guid ownerField;
        
        private byte stateField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string areaPathField;
        
        private string iterationField;
        
        private int testSettingsIdField;
        
        private int automatedTestSettingsIdField;
        
        private System.Guid manualTestEnvironmentIdField;
        
        private System.Guid automatedTestEnvironmentIdField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private int rootSuiteIdField;
        
        private int revisionField;
        
        private string buildDefinitionField;
        
        private string buildQualityField;
        
        private string buildUriField;
        
        private string previousBuildUriField;
        
        private System.DateTime buildTakenDateField;
        
        public TestPlan() {
            this.testSettingsIdField = 0;
            this.automatedTestSettingsIdField = 0;
            this.lastUpdatedField = new System.DateTime(0);
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PlanId {
            get {
                return this.planIdField;
            }
            set {
                this.planIdField = value;
                this.RaisePropertyChanged("PlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("Owner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AreaPath {
            get {
                return this.areaPathField;
            }
            set {
                this.areaPathField = value;
                this.RaisePropertyChanged("AreaPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Iteration {
            get {
                return this.iterationField;
            }
            set {
                this.iterationField = value;
                this.RaisePropertyChanged("Iteration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int TestSettingsId {
            get {
                return this.testSettingsIdField;
            }
            set {
                this.testSettingsIdField = value;
                this.RaisePropertyChanged("TestSettingsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int AutomatedTestSettingsId {
            get {
                return this.automatedTestSettingsIdField;
            }
            set {
                this.automatedTestSettingsIdField = value;
                this.RaisePropertyChanged("AutomatedTestSettingsId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid ManualTestEnvironmentId {
            get {
                return this.manualTestEnvironmentIdField;
            }
            set {
                this.manualTestEnvironmentIdField = value;
                this.RaisePropertyChanged("ManualTestEnvironmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid AutomatedTestEnvironmentId {
            get {
                return this.automatedTestEnvironmentIdField;
            }
            set {
                this.automatedTestEnvironmentIdField = value;
                this.RaisePropertyChanged("AutomatedTestEnvironmentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RootSuiteId {
            get {
                return this.rootSuiteIdField;
            }
            set {
                this.rootSuiteIdField = value;
                this.RaisePropertyChanged("RootSuiteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildDefinition {
            get {
                return this.buildDefinitionField;
            }
            set {
                this.buildDefinitionField = value;
                this.RaisePropertyChanged("BuildDefinition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildQuality {
            get {
                return this.buildQualityField;
            }
            set {
                this.buildQualityField = value;
                this.RaisePropertyChanged("BuildQuality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildUri {
            get {
                return this.buildUriField;
            }
            set {
                this.buildUriField = value;
                this.RaisePropertyChanged("BuildUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PreviousBuildUri {
            get {
                return this.previousBuildUriField;
            }
            set {
                this.previousBuildUriField = value;
                this.RaisePropertyChanged("PreviousBuildUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime BuildTakenDate {
            get {
                return this.buildTakenDateField;
            }
            set {
                this.buildTakenDateField = value;
                this.RaisePropertyChanged("BuildTakenDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestPoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int pointIdField;
        
        private byte stateField;
        
        private byte failureTypeField;
        
        private int planIdField;
        
        private int suiteIdField;
        
        private int configurationIdField;
        
        private string configurationNameField;
        
        private int lastTestRunIdField;
        
        private int lastTestResultIdField;
        
        private byte lastResultStateField;
        
        private byte lastResultOutcomeField;
        
        private int lastResolutionStateIdField;
        
        private int testCaseIdField;
        
        private string commentField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private System.Guid assignedToField;
        
        private int revisionField;
        
        public TestPoint() {
            this.lastUpdatedField = new System.DateTime(0);
            this.revisionField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PointId {
            get {
                return this.pointIdField;
            }
            set {
                this.pointIdField = value;
                this.RaisePropertyChanged("PointId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte FailureType {
            get {
                return this.failureTypeField;
            }
            set {
                this.failureTypeField = value;
                this.RaisePropertyChanged("FailureType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PlanId {
            get {
                return this.planIdField;
            }
            set {
                this.planIdField = value;
                this.RaisePropertyChanged("PlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SuiteId {
            get {
                return this.suiteIdField;
            }
            set {
                this.suiteIdField = value;
                this.RaisePropertyChanged("SuiteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ConfigurationId {
            get {
                return this.configurationIdField;
            }
            set {
                this.configurationIdField = value;
                this.RaisePropertyChanged("ConfigurationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ConfigurationName {
            get {
                return this.configurationNameField;
            }
            set {
                this.configurationNameField = value;
                this.RaisePropertyChanged("ConfigurationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LastTestRunId {
            get {
                return this.lastTestRunIdField;
            }
            set {
                this.lastTestRunIdField = value;
                this.RaisePropertyChanged("LastTestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LastTestResultId {
            get {
                return this.lastTestResultIdField;
            }
            set {
                this.lastTestResultIdField = value;
                this.RaisePropertyChanged("LastTestResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte LastResultState {
            get {
                return this.lastResultStateField;
            }
            set {
                this.lastResultStateField = value;
                this.RaisePropertyChanged("LastResultState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte LastResultOutcome {
            get {
                return this.lastResultOutcomeField;
            }
            set {
                this.lastResultOutcomeField = value;
                this.RaisePropertyChanged("LastResultOutcome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LastResolutionStateId {
            get {
                return this.lastResolutionStateIdField;
            }
            set {
                this.lastResolutionStateIdField = value;
                this.RaisePropertyChanged("LastResolutionStateId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
                this.RaisePropertyChanged("TestCaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
                this.RaisePropertyChanged("AssignedTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ImpactedPoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string buildUriField;
        
        private int testCaseIdField;
        
        private int pointIdField;
        
        private byte confidenceField;
        
        private byte stateField;
        
        private string suiteNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildUri {
            get {
                return this.buildUriField;
            }
            set {
                this.buildUriField = value;
                this.RaisePropertyChanged("BuildUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
                this.RaisePropertyChanged("TestCaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PointId {
            get {
                return this.pointIdField;
            }
            set {
                this.pointIdField = value;
                this.RaisePropertyChanged("PointId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte Confidence {
            get {
                return this.confidenceField;
            }
            set {
                this.confidenceField = value;
                this.RaisePropertyChanged("Confidence");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SuiteName {
            get {
                return this.suiteNameField;
            }
            set {
                this.suiteNameField = value;
                this.RaisePropertyChanged("SuiteName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class BuildConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int buildConfigurationIdField;
        
        private string teamProjectNameField;
        
        private string buildUriField;
        
        private string buildFlavorField;
        
        private string buildPlatformField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BuildConfigurationId {
            get {
                return this.buildConfigurationIdField;
            }
            set {
                this.buildConfigurationIdField = value;
                this.RaisePropertyChanged("BuildConfigurationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TeamProjectName {
            get {
                return this.teamProjectNameField;
            }
            set {
                this.teamProjectNameField = value;
                this.RaisePropertyChanged("TeamProjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildUri {
            get {
                return this.buildUriField;
            }
            set {
                this.buildUriField = value;
                this.RaisePropertyChanged("BuildUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildFlavor {
            get {
                return this.buildFlavorField;
            }
            set {
                this.buildFlavorField = value;
                this.RaisePropertyChanged("BuildFlavor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildPlatform {
            get {
                return this.buildPlatformField;
            }
            set {
                this.buildPlatformField = value;
                this.RaisePropertyChanged("BuildPlatform");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class FunctionCoverage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CoverageStatistics statisticsField;
        
        private string namespaceField;
        
        private string classField;
        
        private string nameField;
        
        private string sourceFileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CoverageStatistics Statistics {
            get {
                return this.statisticsField;
            }
            set {
                this.statisticsField = value;
                this.RaisePropertyChanged("Statistics");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("Namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
                this.RaisePropertyChanged("Class");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceFile {
            get {
                return this.sourceFileField;
            }
            set {
                this.sourceFileField = value;
                this.RaisePropertyChanged("SourceFile");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class CoverageStatistics : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int linesCoveredField;
        
        private int linesNotCoveredField;
        
        private int linesPartiallyCoveredField;
        
        private int blocksCoveredField;
        
        private int blocksNotCoveredField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LinesCovered {
            get {
                return this.linesCoveredField;
            }
            set {
                this.linesCoveredField = value;
                this.RaisePropertyChanged("LinesCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LinesNotCovered {
            get {
                return this.linesNotCoveredField;
            }
            set {
                this.linesNotCoveredField = value;
                this.RaisePropertyChanged("LinesNotCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LinesPartiallyCovered {
            get {
                return this.linesPartiallyCoveredField;
            }
            set {
                this.linesPartiallyCoveredField = value;
                this.RaisePropertyChanged("LinesPartiallyCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlocksCovered {
            get {
                return this.blocksCoveredField;
            }
            set {
                this.blocksCoveredField = value;
                this.RaisePropertyChanged("BlocksCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlocksNotCovered {
            get {
                return this.blocksNotCoveredField;
            }
            set {
                this.blocksNotCoveredField = value;
                this.RaisePropertyChanged("BlocksNotCovered");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ModuleCoverage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] blockDataField;
        
        private CoverageStatistics statisticsField;
        
        private FunctionCoverage[] functionsField;
        
        private System.Guid signatureField;
        
        private int signatureAgeField;
        
        private string nameField;
        
        private int blockCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] BlockData {
            get {
                return this.blockDataField;
            }
            set {
                this.blockDataField = value;
                this.RaisePropertyChanged("BlockData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public CoverageStatistics Statistics {
            get {
                return this.statisticsField;
            }
            set {
                this.statisticsField = value;
                this.RaisePropertyChanged("Statistics");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public FunctionCoverage[] Functions {
            get {
                return this.functionsField;
            }
            set {
                this.functionsField = value;
                this.RaisePropertyChanged("Functions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
                this.RaisePropertyChanged("Signature");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SignatureAge {
            get {
                return this.signatureAgeField;
            }
            set {
                this.signatureAgeField = value;
                this.RaisePropertyChanged("SignatureAge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int BlockCount {
            get {
                return this.blockCountField;
            }
            set {
                this.blockCountField = value;
                this.RaisePropertyChanged("BlockCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestRunCoverage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BuildCoverage))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class Coverage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string lastErrorField;
        
        private ModuleCoverage[] modulesField;
        
        private byte stateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string LastError {
            get {
                return this.lastErrorField;
            }
            set {
                this.lastErrorField = value;
                this.RaisePropertyChanged("LastError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public ModuleCoverage[] Modules {
            get {
                return this.modulesField;
            }
            set {
                this.modulesField = value;
                this.RaisePropertyChanged("Modules");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestRunCoverage : Coverage {
        
        private int testRunIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class BuildCoverage : Coverage {
        
        private BuildConfiguration configurationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BuildConfiguration Configuration {
            get {
                return this.configurationField;
            }
            set {
                this.configurationField = value;
                this.RaisePropertyChanged("Configuration");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class MachineRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestEnvironment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NameValuePair[] propertiesField;
        
        private MachineRole[] machineRolesField;
        
        private System.Guid idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string projectNameField;
        
        private string controllerNameField;
        
        private string controllerDisplayNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public NameValuePair[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public MachineRole[] MachineRoles {
            get {
                return this.machineRolesField;
            }
            set {
                this.machineRolesField = value;
                this.RaisePropertyChanged("MachineRoles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
                this.RaisePropertyChanged("ProjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ControllerName {
            get {
                return this.controllerNameField;
            }
            set {
                this.controllerNameField = value;
                this.RaisePropertyChanged("ControllerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ControllerDisplayName {
            get {
                return this.controllerDisplayNameField;
            }
            set {
                this.controllerDisplayNameField = value;
                this.RaisePropertyChanged("ControllerDisplayName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class NameValuePair : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestController : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NameValuePair[] propertiesField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string groupIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public NameValuePair[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
                this.RaisePropertyChanged("GroupId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class DataCollectorInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlNode defaultConfigurationField;
        
        private System.Xml.XmlNode configurationEditorConfigurationField;
        
        private NameValuePair[] propertiesField;
        
        private System.Guid idField;
        
        private string typeUriField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Xml.XmlNode DefaultConfiguration {
            get {
                return this.defaultConfigurationField;
            }
            set {
                this.defaultConfigurationField = value;
                this.RaisePropertyChanged("DefaultConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Xml.XmlNode ConfigurationEditorConfiguration {
            get {
                return this.configurationEditorConfigurationField;
            }
            set {
                this.configurationEditorConfigurationField = value;
                this.RaisePropertyChanged("ConfigurationEditorConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public NameValuePair[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TypeUri {
            get {
                return this.typeUriField;
            }
            set {
                this.typeUriField = value;
                this.RaisePropertyChanged("TypeUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestSettingsMachineRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private bool isExecutionField;
        
        public TestSettingsMachineRole() {
            this.isExecutionField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsExecution {
            get {
                return this.isExecutionField;
            }
            set {
                this.isExecutionField = value;
                this.RaisePropertyChanged("IsExecution");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TestSettingsMachineRole[] machineRolesField;
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.Guid createdByField;
        
        private System.DateTime createdDateField;
        
        private bool isPublicField;
        
        private bool isAutomatedField;
        
        private string settingsField;
        
        private string areaPathField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private int revisionField;
        
        public TestSettings() {
            this.idField = 0;
            this.lastUpdatedField = new System.DateTime(0);
            this.revisionField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public TestSettingsMachineRole[] MachineRoles {
            get {
                return this.machineRolesField;
            }
            set {
                this.machineRolesField = value;
                this.RaisePropertyChanged("MachineRoles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsPublic {
            get {
                return this.isPublicField;
            }
            set {
                this.isPublicField = value;
                this.RaisePropertyChanged("IsPublic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsAutomated {
            get {
                return this.isAutomatedField;
            }
            set {
                this.isAutomatedField = value;
                this.RaisePropertyChanged("IsAutomated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Settings {
            get {
                return this.settingsField;
            }
            set {
                this.settingsField = value;
                this.RaisePropertyChanged("Settings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AreaPath {
            get {
                return this.areaPathField;
            }
            set {
                this.areaPathField = value;
                this.RaisePropertyChanged("AreaPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestVariable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] valuesField;
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private int revisionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public string[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class TestConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NameValuePair[] valuesField;
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private string areaPathField;
        
        private bool isDefaultField;
        
        private int revisionField;
        
        private byte stateField;
        
        public TestConfiguration() {
            this.idField = 0;
            this.lastUpdatedField = new System.DateTime(0);
            this.revisionField = 0;
            this.stateField = ((byte)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public NameValuePair[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AreaPath {
            get {
                return this.areaPathField;
            }
            set {
                this.areaPathField = value;
                this.RaisePropertyChanged("AreaPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
                this.RaisePropertyChanged("IsDefault");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BlockedPointProperties))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class UpdatedProperties : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int revisionField;
        
        private System.DateTime lastUpdatedField;
        
        private System.Guid lastUpdatedByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class BlockedPointProperties : UpdatedProperties {
        
        private int lastTestRunIdField;
        
        private int lastTestResultIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LastTestRunId {
            get {
                return this.lastTestRunIdField;
            }
            set {
                this.lastTestRunIdField = value;
                this.RaisePropertyChanged("LastTestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int LastTestResultId {
            get {
                return this.lastTestResultIdField;
            }
            set {
                this.lastTestResultIdField = value;
                this.RaisePropertyChanged("LastTestResultId");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class BugFieldMapping : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid createdByField;
        
        private System.DateTime createdDateField;
        
        private string fieldMappingField;
        
        private System.Guid lastUpdatedByField;
        
        private System.DateTime lastUpdatedField;
        
        private int revisionField;
        
        public BugFieldMapping() {
            this.lastUpdatedField = new System.DateTime(0);
            this.revisionField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FieldMapping {
            get {
                return this.fieldMappingField;
            }
            set {
                this.fieldMappingField = value;
                this.RaisePropertyChanged("FieldMapping");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid LastUpdatedBy {
            get {
                return this.lastUpdatedByField;
            }
            set {
                this.lastUpdatedByField = value;
                this.RaisePropertyChanged("LastUpdatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
                this.RaisePropertyChanged("LastUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class DefaultAfnStripBinding : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int testCaseIdField;
        
        private int testRunIdField;
        
        private int testResultIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
                this.RaisePropertyChanged("TestCaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
                this.RaisePropertyChanged("TestRunId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TestResultId {
            get {
                return this.testResultIdField;
            }
            set {
                this.testResultIdField = value;
                this.RaisePropertyChanged("TestResultId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public partial class ResultsStoreQuery : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string queryTextField;
        
        private bool dayPrecisionField;
        
        private string timeZoneField;
        
        private string teamProjectNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string QueryText {
            get {
                return this.queryTextField;
            }
            set {
                this.queryTextField = value;
                this.RaisePropertyChanged("QueryText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool DayPrecision {
            get {
                return this.dayPrecisionField;
            }
            set {
                this.dayPrecisionField = value;
                this.RaisePropertyChanged("DayPrecision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
                this.RaisePropertyChanged("TimeZone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TeamProjectName {
            get {
                return this.teamProjectNameField;
            }
            set {
                this.teamProjectNameField = value;
                this.RaisePropertyChanged("TeamProjectName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01")]
    public enum EnvironmentParentTypes {
        
        /// <remarks/>
        TeamProject,
        
        /// <remarks/>
        TestController,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAssociatedWorkItemsFromResults", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", IsWrapped=true)]
    public partial class QueryAssociatedWorkItemsFromResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", Order=0)]
        public int[] pointIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", Order=1)]
        public int planId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", Order=2)]
        public string projectName;
        
        public QueryAssociatedWorkItemsFromResultsRequest() {
        }
        
        public QueryAssociatedWorkItemsFromResultsRequest(int[] pointIds, int planId, string projectName) {
            this.pointIds = pointIds;
            this.planId = planId;
            this.projectName = projectName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryAssociatedWorkItemsFromResultsResponse", WrapperNamespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", IsWrapped=true)]
    public partial class QueryAssociatedWorkItemsFromResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2007/02/TCM/TestResults/01", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt")]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public int[][] QueryAssociatedWorkItemsFromResultsResult;
        
        public QueryAssociatedWorkItemsFromResultsResponse() {
        }
        
        public QueryAssociatedWorkItemsFromResultsResponse(int[][] QueryAssociatedWorkItemsFromResultsResult) {
            this.QueryAssociatedWorkItemsFromResultsResult = QueryAssociatedWorkItemsFromResultsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TestResultsServiceSoapChannel : Forseti.TFSBuildActivities.TestResultsService.TestResultsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestResultsServiceSoapClient : System.ServiceModel.ClientBase<Forseti.TFSBuildActivities.TestResultsService.TestResultsServiceSoap>, Forseti.TFSBuildActivities.TestResultsService.TestResultsServiceSoap {
        
        public TestResultsServiceSoapClient() {
        }
        
        public TestResultsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestResultsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestResultsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestResultsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryDefaultStrips(int[] testCaseIds, string projectName) {
            return base.Channel.QueryDefaultStrips(testCaseIds, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryAttachments(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryAttachments(query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryTestResultAttachments(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier identifier, string projectName) {
            return base.Channel.QueryTestResultAttachments(identifier, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] QueryTestRunAttachments(int testRunId, string projectName) {
            return base.Channel.QueryTestRunAttachments(testRunId, projectName);
        }
        
        public void UpdateDefaultStrips(Forseti.TFSBuildActivities.TestResultsService.DefaultAfnStripBinding[] afnStripBindingList, string projectName) {
            base.Channel.UpdateDefaultStrips(afnStripBindingList, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties CreateBugFieldMapping(Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping bugFieldMapping, string teamProjectName) {
            return base.Channel.CreateBugFieldMapping(bugFieldMapping, teamProjectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping QueryBugFieldMapping(string projectName) {
            return base.Channel.QueryBugFieldMapping(projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateBugFieldMapping(Forseti.TFSBuildActivities.TestResultsService.BugFieldMapping bugFieldMapping, string projectName) {
            return base.Channel.UpdateBugFieldMapping(bugFieldMapping, projectName);
        }
        
        public void DeleteBuild(string projectName, string buildUri) {
            base.Channel.DeleteBuild(projectName, buildUri);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestConfiguration CreateTestConfiguration(Forseti.TFSBuildActivities.TestResultsService.TestConfiguration testConfiguration, string teamProjectName) {
            return base.Channel.CreateTestConfiguration(testConfiguration, teamProjectName);
        }
        
        public void DeleteTestConfiguration(int testConfigurationId, string projectName) {
            base.Channel.DeleteTestConfiguration(testConfigurationId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestConfiguration QueryTestConfigurationById(int testConfigurationId, string projectName) {
            return base.Channel.QueryTestConfigurationById(testConfigurationId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestConfiguration[] QueryTestConfigurations(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestConfigurations(query);
        }
        
        public int QueryTestConfigurationsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestConfigurationsCount(query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestConfiguration(Forseti.TFSBuildActivities.TestResultsService.TestConfiguration testConfiguration, string projectName, bool updateInUse, bool unchangedValues) {
            return base.Channel.UpdateTestConfiguration(testConfiguration, projectName, updateInUse, unchangedValues);
        }
        
        public int CreateTestVariable(Forseti.TFSBuildActivities.TestResultsService.TestVariable variable, string teamProjectName) {
            return base.Channel.CreateTestVariable(variable, teamProjectName);
        }
        
        public int UpdateTestVariable(Forseti.TFSBuildActivities.TestResultsService.TestVariable variable, string projectName) {
            return base.Channel.UpdateTestVariable(variable, projectName);
        }
        
        public void DeleteTestVariable(int variableId, string projectName) {
            base.Channel.DeleteTestVariable(variableId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestVariable QueryTestVariableById(int variableId, string projectName) {
            return base.Channel.QueryTestVariableById(variableId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestVariable[] QueryTestVariables(string teamProjectName) {
            return base.Channel.QueryTestVariables(teamProjectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties CreateTestSettings(Forseti.TFSBuildActivities.TestResultsService.TestSettings settings, string teamProjectName) {
            return base.Channel.CreateTestSettings(settings, teamProjectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestSettings(Forseti.TFSBuildActivities.TestResultsService.TestSettings settings, string projectName) {
            return base.Channel.UpdateTestSettings(settings, projectName);
        }
        
        public void DeleteTestSettings(int settingsId, string projectName) {
            base.Channel.DeleteTestSettings(settingsId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestSettings QueryTestSettingsById(int settingsId, string projectName) {
            return base.Channel.QueryTestSettingsById(settingsId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestSettings[] QueryTestSettings(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, bool omitSettings) {
            return base.Channel.QueryTestSettings(query, omitSettings);
        }
        
        public int QueryTestSettingsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestSettingsCount(query);
        }
        
        public int CreateTestResolutionState(Forseti.TFSBuildActivities.TestResultsService.TestResolutionState resolutionState, string teamProjectName) {
            return base.Channel.CreateTestResolutionState(resolutionState, teamProjectName);
        }
        
        public void UpdateTestResolutionState(Forseti.TFSBuildActivities.TestResultsService.TestResolutionState state, string projectName) {
            base.Channel.UpdateTestResolutionState(state, projectName);
        }
        
        public void DeleteTestResolutionState(int stateId, string projectName) {
            base.Channel.DeleteTestResolutionState(stateId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResolutionState[] QueryTestResolutionStateById(int testResolutionStateId, string projectName) {
            return base.Channel.QueryTestResolutionStateById(testResolutionStateId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestResolutionState[] QueryTestResolutionStates(string teamProject) {
            return base.Channel.QueryTestResolutionStates(teamProject);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] RegisterCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.RegisterCollectors(collectors, teamProjectCollectionCatalogResourceId);
        }
        
        public void UnregisterCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.UnregisterCollectors(collectors, teamProjectCollectionCatalogResourceId);
        }
        
        public void UpdateCollectors(Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] collectors, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.UpdateCollectors(collectors, teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation[] QueryCollectors(System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.QueryCollectors(teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.DataCollectorInformation FindCollector(System.Guid teamProjectCollectionCatalogResourceId, string typeUri) {
            return base.Channel.FindCollector(teamProjectCollectionCatalogResourceId, typeUri);
        }
        
        public void RegisterControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.RegisterControllers(controllers, teamProjectCollectionCatalogResourceId);
        }
        
        public void UnregisterControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.UnregisterControllers(controllers, teamProjectCollectionCatalogResourceId);
        }
        
        public void UpdateControllers(Forseti.TFSBuildActivities.TestResultsService.TestController[] controllers, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.UpdateControllers(controllers, teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestController[] QueryControllers(System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.QueryControllers(teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestController[] QueryControllersByGroupId(System.Guid teamProjectCollectionCatalogResourceId, string groupId) {
            return base.Channel.QueryControllersByGroupId(teamProjectCollectionCatalogResourceId, groupId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestController FindController(System.Guid teamProjectCollectionCatalogResourceId, string controllerName) {
            return base.Channel.FindController(teamProjectCollectionCatalogResourceId, controllerName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] RegisterEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.RegisterEnvironments(environments, parentName, parentType, teamProjectCollectionCatalogResourceId);
        }
        
        public void UnregisterEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId) {
            base.Channel.UnregisterEnvironments(environments, parentName, parentType, teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] UpdateEnvironments(Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] environments, string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.UpdateEnvironments(environments, parentName, parentType, teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestEnvironment[] QueryEnvironments(string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid teamProjectCollectionCatalogResourceId) {
            return base.Channel.QueryEnvironments(parentName, parentType, teamProjectCollectionCatalogResourceId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestEnvironment FindEnvironment(string parentName, Forseti.TFSBuildActivities.TestResultsService.EnvironmentParentTypes parentType, System.Guid environmentId) {
            return base.Channel.FindEnvironment(parentName, parentType, environmentId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.BuildCoverage[] QueryBuildCoverage(string projectName, string buildUri, int flags) {
            return base.Channel.QueryBuildCoverage(projectName, buildUri, flags);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRunCoverage[] QueryTestRunCoverage(string projectName, int testRunId, int flags) {
            return base.Channel.QueryTestRunCoverage(projectName, testRunId, flags);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.ImpactedPoint[] QueryImpactedPointsForPlan(string teamProjectName, int planId, string buildUri) {
            return base.Channel.QueryImpactedPointsForPlan(teamProjectName, planId, buildUri);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.BlockedPointProperties[] BlockTestPoints(Forseti.TFSBuildActivities.TestResultsService.TestPoint[] points, string projectName) {
            return base.Channel.BlockTestPoints(points, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPlan CreateTestPlan(Forseti.TFSBuildActivities.TestResultsService.TestPlan testPlan, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] links) {
            return base.Channel.CreateTestPlan(testPlan, teamProjectName, links);
        }
        
        public void DeleteTestPlan(int testPlanId, string projectName) {
            base.Channel.DeleteTestPlan(testPlanId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPlan[] FetchTestPlans(out int[] deletedIds, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] idsToFetch, string projectName) {
            return base.Channel.FetchTestPlans(out deletedIds, idsToFetch, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPoint[] FetchTestPoints(out int[] deletedIds, string projectName, int planId, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] idsToFetch) {
            return base.Channel.FetchTestPoints(out deletedIds, projectName, planId, idsToFetch);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.SuitePointCount[] QuerySuitePointCounts(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QuerySuitePointCounts(planId, query);
        }
        
        public int[] QueryTestCases(string queryText, bool inPlans, string teamProjectName) {
            return base.Channel.QueryTestCases(queryText, inPlans, teamProjectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.SkinnyPlan[] QueryTestPlans(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestPlans(query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] QueryTestPlanLinks(string projectName, int planId) {
            return base.Channel.QueryTestPlanLinks(projectName, planId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPoint[] QueryTestPoints(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestPoints(planId, query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPointStatistic[] QueryTestPointStatistics(int planId, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestPointStatistics(planId, query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPoint[] QueryTestPointHistory(int testPointId, int planId, string projectName) {
            return base.Channel.QueryTestPointHistory(testPointId, planId, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestPlan UpdateTestPlan(Forseti.TFSBuildActivities.TestResultsService.TestPlan testPlan, string projectName, Forseti.TFSBuildActivities.TestResultsService.TestExternalLink[] changedLinks) {
            return base.Channel.UpdateTestPlan(testPlan, projectName, changedLinks);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties[] UpdateTestPoints(Forseti.TFSBuildActivities.TestResultsService.TestPoint[] points, string projectName) {
            return base.Channel.UpdateTestPoints(points, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AddCasesToSuite(out int[] configurationIds, out string[] configurationNames, Forseti.TFSBuildActivities.TestResultsService.IdAndRev parent, Forseti.TFSBuildActivities.TestResultsService.TestCaseAndOwner[] testCases, int toIndex, string projectName) {
            return base.Channel.AddCasesToSuite(out configurationIds, out configurationNames, parent, testCases, toIndex, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AddSuiteToSuite(out Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties newSuiteProperties, Forseti.TFSBuildActivities.TestResultsService.IdAndRev parent, Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite suite, string teamProjectName, int toIndex) {
            return base.Channel.AddSuiteToSuite(out newSuiteProperties, parent, suite, teamProjectName, toIndex);
        }
        
        public int CopyTestSuiteEntries(string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev fromSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, Forseti.TFSBuildActivities.TestResultsService.IdAndRev toSuiteId, int toIndex) {
            return base.Channel.CopyTestSuiteEntries(teamProjectName, fromSuiteId, entries, toSuiteId, toIndex);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties DeleteTestSuiteEntries(Forseti.TFSBuildActivities.TestResultsService.IdAndRev parentSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, string projectName) {
            return base.Channel.DeleteTestSuiteEntries(parentSuiteId, entries, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] FetchTestSuites(out int[] deletedIds, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev[] suiteIds) {
            return base.Channel.FetchTestSuites(out deletedIds, teamProjectName, suiteIds);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties MoveTestSuiteEntries(out Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties newToProps, string teamProjectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev fromSuiteId, Forseti.TFSBuildActivities.TestResultsService.TestSuiteEntry[] entries, Forseti.TFSBuildActivities.TestResultsService.IdAndRev toSuiteId, int toIndex) {
            return base.Channel.MoveTestSuiteEntries(out newToProps, teamProjectName, fromSuiteId, entries, toSuiteId, toIndex);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] QueryTestSuites(out Forseti.TFSBuildActivities.TestResultsService.SuiteIdAndType[] excessIds, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, int pageSize) {
            return base.Channel.QueryTestSuites(out excessIds, query, pageSize);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite[] QueryTestSuitesByTestCaseId(out Forseti.TFSBuildActivities.TestResultsService.SuiteIdAndType[] excessIds, string teamProjectName, int testCaseId, int pageSize) {
            return base.Channel.QueryTestSuitesByTestCaseId(out excessIds, teamProjectName, testCaseId, pageSize);
        }
        
        public void RepopulateTestSuite(string teamProjectName, int suiteId) {
            base.Channel.RepopulateTestSuite(teamProjectName, suiteId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties SetSuiteEntryConfigurations(string projectName, Forseti.TFSBuildActivities.TestResultsService.IdAndRev suite, Forseti.TFSBuildActivities.TestResultsService.TestCaseAndOwner[] testCases, int[] configIds) {
            return base.Channel.SetSuiteEntryConfigurations(projectName, suite, testCases, configIds);
        }
        
        public void AssignTestPoints(string projectName, int suiteId, Forseti.TFSBuildActivities.TestResultsService.TestPointAssignment[] assignments) {
            base.Channel.AssignTestPoints(projectName, suiteId, assignments);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestSuite(Forseti.TFSBuildActivities.TestResultsService.ServerTestSuite testSuite, string projectName) {
            return base.Channel.UpdateTestSuite(testSuite, projectName);
        }
        
        public void CreateTestResults(Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] results, string projectName) {
            base.Channel.CreateTestResults(results, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun CreateTestRun(Forseti.TFSBuildActivities.TestResultsService.TestRun testRun, string teamProjectName) {
            return base.Channel.CreateTestRun(testRun, teamProjectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties AbortTestRun(int testRunId, int revision, string projectName, int options) {
            return base.Channel.AbortTestRun(testRunId, revision, projectName, options);
        }
        
        public void DeleteTestRun(int testRunId, string projectName) {
            base.Channel.DeleteTestRun(testRunId, projectName);
        }
        
        public void DeleteTestRuns(int[] testRunIds, string projectName) {
            base.Channel.DeleteTestRuns(testRunIds, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.BuildConfiguration QueryBuildConfigurationById(int buildConfigurationId) {
            return base.Channel.QueryBuildConfigurationById(buildConfigurationId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestActionResult[] QueryTestActionResults(out Forseti.TFSBuildActivities.TestResultsService.TestResultParameter[] parameters, out Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] attachments, Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier identifier, string projectName) {
            return base.Channel.QueryTestActionResults(out parameters, out attachments, identifier, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult FindTestResultInMultipleProjects(out string projectName, int testRunId, int testResultId) {
            return base.Channel.FindTestResultInMultipleProjects(out projectName, testRunId, testResultId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResults(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query, int pageSize) {
            return base.Channel.QueryTestResults(out excessIds, query, pageSize);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] FetchTestResults(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] deletedIds, Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdAndRev[] idsToFetch, string projectName) {
            return base.Channel.FetchTestResults(out deletedIds, idsToFetch, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRun(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, int pageSize, string projectName) {
            return base.Channel.QueryTestResultsByRun(out excessIds, testRunId, pageSize, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByPoint(string projectName, int planId, int pointId) {
            return base.Channel.QueryTestResultsByPoint(projectName, planId, pointId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndOwner(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, System.Guid owner, int pageSize, string projectName) {
            return base.Channel.QueryTestResultsByRunAndOwner(out excessIds, testRunId, owner, pageSize, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndState(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, byte state, int pageSize, string projectName) {
            return base.Channel.QueryTestResultsByRunAndState(out excessIds, testRunId, state, pageSize, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] QueryTestResultsByRunAndOutcome(out Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] excessIds, int testRunId, byte outcome, int pageSize, string projectName) {
            return base.Channel.QueryTestResultsByRunAndOutcome(out excessIds, testRunId, outcome, pageSize, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRuns(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestRuns(query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsInMultipleProjects(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestRunsInMultipleProjects(query);
        }
        
        public int QueryTestRunsCount(Forseti.TFSBuildActivities.TestResultsService.ResultsStoreQuery query) {
            return base.Channel.QueryTestRunsCount(query);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsById(string teamProjectName, int testRunId) {
            return base.Channel.QueryTestRunsById(teamProjectName, testRunId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsByBuild(string teamProjectName, string buildUri) {
            return base.Channel.QueryTestRunsByBuild(teamProjectName, buildUri);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun[] QueryTestRunsByOwner(string teamProjectName, System.Guid owner) {
            return base.Channel.QueryTestRunsByOwner(teamProjectName, owner);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRun QueryTestRunByTmiRunId(System.Guid tmiRunId) {
            return base.Channel.QueryTestRunByTmiRunId(tmiRunId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestRunStatistic[] QueryTestRunStatistics(string projectName, int testRunId) {
            return base.Channel.QueryTestRunStatistics(projectName, testRunId);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestCaseResult[] ResetTestResults(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string projectName) {
            return base.Channel.ResetTestResults(identifiers, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.ResultUpdateResponse[] UpdateTestResults(Forseti.TFSBuildActivities.TestResultsService.ResultUpdateRequest[] requests, string projectName) {
            return base.Channel.UpdateTestResults(requests, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.UpdatedProperties UpdateTestRun(out int[] attachmentIds, Forseti.TFSBuildActivities.TestResultsService.TestRun testRun, Forseti.TFSBuildActivities.TestResultsService.TestResultAttachment[] attachments, Forseti.TFSBuildActivities.TestResultsService.TestResultAttachmentIdentity[] attachmentDeletes, string projectName) {
            return base.Channel.UpdateTestRun(out attachmentIds, testRun, attachments, attachmentDeletes, projectName);
        }
        
        public int[] CreateLogEntriesForRun(int testRunId, Forseti.TFSBuildActivities.TestResultsService.TestMessageLogEntry[] logEntries, string projectName) {
            return base.Channel.CreateLogEntriesForRun(testRunId, logEntries, projectName);
        }
        
        public Forseti.TFSBuildActivities.TestResultsService.TestMessageLogEntry[] QueryLogEntriesForRun(int testRunId, int testMessageLogId, string projectName) {
            return base.Channel.QueryLogEntriesForRun(testRunId, testMessageLogId, projectName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsResponse Forseti.TFSBuildActivities.TestResultsService.TestResultsServiceSoap.QueryAssociatedWorkItemsFromResults(Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsRequest request) {
            return base.Channel.QueryAssociatedWorkItemsFromResults(request);
        }
        
        public int[][] QueryAssociatedWorkItemsFromResults(int[] pointIds, int planId, string projectName) {
            Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsRequest inValue = new Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsRequest();
            inValue.pointIds = pointIds;
            inValue.planId = planId;
            inValue.projectName = projectName;
            Forseti.TFSBuildActivities.TestResultsService.QueryAssociatedWorkItemsFromResultsResponse retVal = ((Forseti.TFSBuildActivities.TestResultsService.TestResultsServiceSoap)(this)).QueryAssociatedWorkItemsFromResults(inValue);
            return retVal.QueryAssociatedWorkItemsFromResultsResult;
        }
        
        public void CreateAssociatedWorkItems(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string[] workItemUris) {
            base.Channel.CreateAssociatedWorkItems(identifiers, workItemUris);
        }
        
        public void DeleteAssociatedWorkItems(Forseti.TFSBuildActivities.TestResultsService.TestCaseResultIdentifier[] identifiers, string[] workItemUris) {
            base.Channel.DeleteAssociatedWorkItems(identifiers, workItemUris);
        }
        
        public void SetTestGroupPermissions(string projectName) {
            base.Channel.SetTestGroupPermissions(projectName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03", ConfigurationName="TestResultsService.IProjectMaintenanceBinding")]
    public interface IProjectMaintenanceBinding {
        
        // CODEGEN: Generating message contract since element name projectUri from namespace http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03/DeleteProje" +
            "ct", ReplyAction="*")]
        Forseti.TFSBuildActivities.TestResultsService.DeleteProjectResponse DeleteProject(Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteProjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteProject", Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03", Order=0)]
        public Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequestBody Body;
        
        public DeleteProjectRequest() {
        }
        
        public DeleteProjectRequest(Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03")]
    public partial class DeleteProjectRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string projectUri;
        
        public DeleteProjectRequestBody() {
        }
        
        public DeleteProjectRequestBody(string projectUri) {
            this.projectUri = projectUri;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteProjectResponse", Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03", Order=0)]
        public Forseti.TFSBuildActivities.TestResultsService.DeleteProjectResponseBody Body;
        
        public DeleteProjectResponse() {
        }
        
        public DeleteProjectResponse(Forseti.TFSBuildActivities.TestResultsService.DeleteProjectResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Admin/03")]
    public partial class DeleteProjectResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool DeleteProjectResult;
        
        public DeleteProjectResponseBody() {
        }
        
        public DeleteProjectResponseBody(bool DeleteProjectResult) {
            this.DeleteProjectResult = DeleteProjectResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectMaintenanceBindingChannel : Forseti.TFSBuildActivities.TestResultsService.IProjectMaintenanceBinding, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectMaintenanceBindingClient : System.ServiceModel.ClientBase<Forseti.TFSBuildActivities.TestResultsService.IProjectMaintenanceBinding>, Forseti.TFSBuildActivities.TestResultsService.IProjectMaintenanceBinding {
        
        public ProjectMaintenanceBindingClient() {
        }
        
        public ProjectMaintenanceBindingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectMaintenanceBindingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectMaintenanceBindingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectMaintenanceBindingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Forseti.TFSBuildActivities.TestResultsService.DeleteProjectResponse Forseti.TFSBuildActivities.TestResultsService.IProjectMaintenanceBinding.DeleteProject(Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequest request) {
            return base.Channel.DeleteProject(request);
        }
        
        public bool DeleteProject(string projectUri) {
            Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequest inValue = new Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequest();
            inValue.Body = new Forseti.TFSBuildActivities.TestResultsService.DeleteProjectRequestBody();
            inValue.Body.projectUri = projectUri;
            Forseti.TFSBuildActivities.TestResultsService.DeleteProjectResponse retVal = ((Forseti.TFSBuildActivities.TestResultsService.IProjectMaintenanceBinding)(this)).DeleteProject(inValue);
            return retVal.Body.DeleteProjectResult;
        }
    }
}
